<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox7.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwSUdH/wDrOfYs/fuLcgAAAABJRU5ErkJggg==
</value>
  </data>
</root>